---
import { Icon } from 'astro-icon/components';
import LanguageSwitcher from './LanguageSwitcher.astro';
import ContactModalNuevo from './ContactModalNuevo.astro';
// import ContactModal from './ContactModal.astro';

const { t } = Astro.props;

const navLinks = [
  { href: "/", textKey: "nav.home" },
  { href: "/tours", textKey: "nav.services" },
  { href: "/blog", textKey: "nav.blog" },
  { href: "/about", textKey: "nav.about" }
];
---

<header class="py-6 relative z-50">
    <div class="container mx-auto px-6 font-sans">
        <!-- El nav sigue siendo el contenedor principal con flex justify-between -->
        <nav class="flex justify-between items-center">
            
            <!-- GRUPO 1: El logo (a la izquierda) -->
            <a href="/">
                <img src="/imagenes/LOGO.png" alt="Klee Logo" class="h-22 w-auto filter invert brightness-0">
            </a>

            <!-- GRUPO 2: Los enlaces de navegación (se centrarán automáticamente) -->
            <div class="hidden md:flex items-center gap-x-8">
                {navLinks.map(link => (
                    <a href={link.href} class="text-gray-300 hover:text-white transition-colors text-xl font-medium">
                        {t(link.textKey)}
                    </a>
                ))}
            </div>

            <!-- GRUPO 3: El switcher y el botón CTA (a la derecha) -->
            <div class="hidden md:flex items-center gap-x-6">
                <LanguageSwitcher />
                <a href="#" class="boton-amarillo" id="open-contact-modal-nuevo">
                    {t('nav.ctaButton')}
                </a>
            </div>

            <!-- El botón de hamburguesa para móvil no está en los 3 grupos, solo aparece en móvil -->
            <button id="menu-btn" class="md:hidden ml-auto focus:outline-none">
                <Icon name="mdi:menu" class="w-8 h-8 text-white" />
            </button>
        </nav>
    </div>

    <!-- El Menú Móvil no necesita cambios, su estructura ya es correcta -->
    <div id="menu" class="hidden md:hidden absolute top-full left-0 w-full bg-gray-900 bg-opacity-95 backdrop-blur-sm">
        <div class="flex flex-col items-center py-8 gap-6">
            {navLinks.map(link => (
                <a href={link.href} class="text-white text-2xl">
                    {t(link.textKey)}
                </a>
            ))}
            <button id="open-contact-modal" class="mt-4 bg-amber-400 text-black font-bold py-3 px-8 rounded-full text-sm tracking-wider">
                {t('nav.ctaButton')}
            </button>
            <div class="mt-6">
                <LanguageSwitcher />
            </div>
        </div>
    </div>
    <ContactModalNuevo t={t} />
</header>

<!-- Script y Estilos no cambian -->
<script>
    const btn = document.getElementById('menu-btn');
    const menu = document.getElementById('menu');
    btn.addEventListener('click', () => {
        menu.classList.toggle('hidden');
    });
    // Modal contacto
    const openContactBtn = document.getElementById('open-contact-modal');
    // const contactModal = document.getElementById('contact-modal');
    // const closeContactBtn = contactModal?.querySelector('.modal-close');
    // if (openContactBtn && contactModal) {
    //   openContactBtn.addEventListener('click', () => {
    //     contactModal.style.display = 'flex';
    //     contactModal.classList.add('open');
    //   });
    // }
    // if (closeContactBtn && contactModal) {
    //   closeContactBtn.addEventListener('click', () => {
    //     contactModal.style.display = 'none';
    //     contactModal.classList.remove('open');
    //   });
    // }
    // Lógica para abrir/cerrar el nuevo modal
    const openContactBtnNuevo = document.getElementById('open-contact-modal-nuevo');
    const contactModalNuevo = document.getElementById('contact-modal');
    const closeContactBtnNuevo = contactModalNuevo?.querySelector('.modal-close');
    if (openContactBtnNuevo && contactModalNuevo) {
        openContactBtnNuevo.addEventListener('click', (e) => {
            e.preventDefault();
            contactModalNuevo.classList.add('open');
            contactModalNuevo.style.display = 'flex';
        });
    }
    if (closeContactBtnNuevo && contactModalNuevo) {
        closeContactBtnNuevo.addEventListener('click', () => {
            contactModalNuevo.classList.remove('open');
            contactModalNuevo.style.display = 'none';
        });
    }
</script>
<style>
    .boton-amarillo {
        @apply bg-transparent border-2 font-bold py-3 px-8 rounded-full text-sm tracking-wider transition-colors duration-300;
        border-color: #FBC943;
        color: #FBC943;
        text-decoration: none;
    }
    .boton-amarillo:hover {
        background-color: #FBC943;
        color: black;
    }
</style>