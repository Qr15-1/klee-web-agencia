---
import { onMount } from 'astro/jsx-runtime';
const stats = [
  { value: 10, label: 'AÑOS DE EXPERIENCIA', prefix: '+' },
  { value: 130, label: 'DISEÑOS', prefix: '+' },
  { value: 7, label: 'DEV', prefix: '' },
  { value: 50, label: 'CLIENTES', prefix: '+' }
];
---
<section class="w-full bg-klee-yellow py-10 stats-section">
  <div class="max-w-6xl mx-auto flex flex-col sm:flex-row justify-between items-center text-center gap-y-8">
    {stats.map((stat, i) => (
      <div class="flex-1">
        <div class="text-4xl sm:text-5xl font-bold text-gray-900">
          <span class="stat-anim" data-target={stat.value} data-prefix={stat.prefix}>{stat.prefix}0</span>
        </div>
        <div class="mt-2 text-xs sm:text-sm tracking-widest text-gray-900 uppercase">{stat.label}</div>
      </div>
    ))}
  </div>
</section>
<script is:inline>
  function animateCount(el, target, prefix) {
    let start = 0;
    const duration = 1200;
    const startTime = performance.now();
    function update(now) {
      const progress = Math.min((now - startTime) / duration, 1);
      const value = Math.floor(progress * target);
      el.textContent = prefix + value;
      if (progress < 1) {
        requestAnimationFrame(update);
      } else {
        el.textContent = prefix + target;
      }
    }
    requestAnimationFrame(update);
  }
  function handleStatsAnimation() {
    const stats = document.querySelectorAll('.stat-anim');
    let triggered = false;
    function onEntry(entries) {
      if (entries[0].isIntersecting && !triggered) {
        triggered = true;
        stats.forEach(el => {
          const target = parseInt(el.getAttribute('data-target'));
          const prefix = el.getAttribute('data-prefix') || '';
          animateCount(el, target, prefix);
        });
        observer.disconnect();
      }
    }
    const observer = new window.IntersectionObserver(onEntry, { threshold: 0.4 });
    const section = document.querySelector('.stats-section');
    if(section) observer.observe(section);
  }
  if (typeof window !== 'undefined') {
    window.addEventListener('DOMContentLoaded', () => {
      handleStatsAnimation();
    });
  }
</script>
<style>
.bg-klee-yellow {
  background-color: #FBC943;
}
</style> 