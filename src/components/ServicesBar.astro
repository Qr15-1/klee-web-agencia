---
// 1. Recibimos la función 't'
const { t } = Astro.props;

// 2. Definimos los servicios en un array.
//    Esto hace que sea fácil añadir, quitar o cambiar el orden.
//    'isActive' marcará cuál es el botón activo.
const services = [
    { href: "#", textKey: "services.design", isActive: false },
    { href: "#", textKey: "services.3d", isActive: false },
    { href: "#", textKey: "services.production", isActive: false },
    { href: "#", textKey: "services.ads", isActive: false },
    { href: "#", textKey: "services.socials", isActive: true }, // Marcamos este como activo
];
---
<section class="container mx-auto px-4">
    <div class="relative -mt-12 z-20 flex justify-center">
        <div class="bg-white rounded-full p-2 shadow-xl flex items-center gap-1">
            
            {/* 3. Recorremos el array para generar los botones dinámicamente */}
            {services.map((service, index) => (
                <>
                    {/* El botón (enlace) */}
                    <a 
                        href={service.href} 
                        class:list={[
                            "font-medium py-2 px-5 rounded-full text-sm transition-colors",
                            { 
                                'bg-klee-yellow text-black font-bold': service.isActive,
                                'text-gray-600 hover:bg-gray-100': !service.isActive,
                            }
                        ]}
                    >
                        {t(service.textKey)} {/* <-- Usamos la función de traducción */}
                    </a>

                    {/* El separador (si no es el último elemento) */}
                    {index < services.length - 1 && (
                        <div class="h-5 w-px bg-gray-200"></div>
                    )}
                </>
            ))}

        </div>
    </div>
</section>